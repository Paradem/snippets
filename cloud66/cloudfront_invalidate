# {{Description: This snippet is a script that automates the invalidation of Cloudfront assets.}} 

/usr/bin/env ruby <<-EORUBY
  require 'rubygems'
  require 'hmac-sha1'
  require 'net/https'
  require 'base64'

  if ENV['S3_ACCESS_KEY'].nil? || ENV['S3_SECRET_KEY'].nil? || ENV['CLOUDFRONT_DISTRIBUTION_ID'].nil?
  	abort("Please set your environment variables to continue.")
  else
	  s3_access = ENV['S3_ACCESS_KEY']
	  s3_secret = ENV['S3_SECRET_KEY']
	  cf_distribution = ENV['CLOUDFRONT_DISTRIBUTION_ID']

	  if ENV['AWS_PATH'].nil?
	    paths = "<Path>/</Path>"
	  else
	    path = ENV['AWS_PATH'].split(/,/)
	    paths = '<Path>/' + path.join('</Path><Path>/') + '</Path>'
	  end

	  date = Time.now.utc
	  date = date.strftime("%a, %d %b %Y %H:%M:%S %Z")
	  digest = HMAC::SHA1.new(s3_secret)
	  digest << date

	  uri = URI.parse('https://cloudfront.amazonaws.com/2010-08-01/distribution/' + cf_distribution + '/invalidation')

	  req = Net::HTTP::Post.new(uri.path)
	  req.initialize_http_header({
	    'x-amz-date' => date,
	    'Content-Type' => 'text/xml',
	    'Authorization' => "AWS %s:%s" % [s3_access, Base64.encode64(digest.digest)]
	  })

	  req.body = "<InvalidationBatch>" + paths + "<CallerReference>ref_#{Time.now.utc.to_i}</CallerReference></InvalidationBatch>"

	  http = Net::HTTP.new(uri.host, uri.port)
	  http.use_ssl = true
	  http.verify_mode = OpenSSL::SSL::VERIFY_NONE
	  res = http.request(req)

	  puts res.code
	  puts res.body
  end	  
EORUBY
